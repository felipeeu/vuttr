{"version":3,"sources":["components/search_bar.js","components/checkbox.js","components/modal.js","components/addbutton.js","App.js","serviceWorker.js","index.js","components/loader.js","services/config.js","services/tools.js"],"names":["InputSearch","styled","input","attrs","props","type","placeholder","Search","setInputValue","onChange","e","target","value","Checkbox","Label","label","Check","setCheckValue","id","checked","InputModal","InputArea","textarea","Wrapper","section","SubmitButton","button","Error","span","AddToolForm","setToolData","toolData","setIsOpen","useState","targetValue","setTargetValue","formik","useFormik","initialValues","title","link","description","tags","validationSchema","Yup","required","onSubmit","values","isValid","Tools","registerTool","then","response","status","concat","data","handleSubmit","htmlFor","name","handleChange","touched","errors","parsedValue","split","setFieldValue","disabled","AddButton","CloseButton","StyledModal","Modal","Add","isOpen","toggleModal","onClick","onBackgroundClick","onEscapeKeydown","Card","React","lazy","AppContainer","Title","h1","SubTitle","h2","Container","TopWrapper","App","inputValue","checkValue","Suspense","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","Preloader","Loader","ConfigService","endPointBaseUrl","publicHeaders","publicApiEndpoint","axios","create","baseURL","headers","ToolsService","getTools","a","axiosInstance","get","toString","filterToolByQuery","queryParam","getToolsByTag","tag","params","post","deleteTool","delete"],"mappings":"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","file":"static/js/main.290fb29d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputSearch = styled.input.attrs(props => ({\n  type: \"text\",\n  placeholder: \"search\"\n}))`\n  background: #f5f4f6 0% 0% no-repeat padding-box;\n  border: 1px solid #ebeaed;\n  border-radius: 5px;\n  opacity: 1;\n  align-self: center;\n  height: 20px;\n`;\n\nconst Search = ({ setInputValue }) => {\n  return <InputSearch onChange={e => setInputValue(e.target.value)} />;\n};\n\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Checkbox = styled.input.attrs(props => ({ type: \"checkbox\" }))`\n  align-self: center;\n`;\nconst Label = styled.label`\n  font-family: Regular 20px/26px Source Sans Pro;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n  color: #170c3a;\n  opacity: 1;\n  align-self: center;\n  padding-left: 5px;\n`;\n\nconst Check = ({ setCheckValue }) => {\n  return (\n    <>\n      <Checkbox\n        id=\"checkTag\"\n        value=\"selected\"\n        onChange={e => setCheckValue(e.target.checked)}\n      />\n      <Label> search in tags Only</Label>\n    </>\n  );\n};\n\nexport default Check;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport Tools from \"../services/tools\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nconst InputModal = styled.input`\n  background: #ebeaed 0% 0% no-repeat padding-box;\n  border: 1px solid #dedce1;\n  border-radius: 5px;\n  opacity: 1;\n  align-self: center;\n  height: 2.5em;\n  width: inherit;\n  text-align: left;\n  font: Regular 20px/26px Source Sans Pro;\n  letter-spacing: 0.4px;\n  opacity: 1;\n`;\nconst InputArea = styled.textarea`\n  background: #ebeaed 0% 0% no-repeat padding-box;\n  border: 1px solid #dedce1;\n  border-radius: 5px;\n  opacity: 1;\n  align-self: center;\n  height: 2.5em;\n  width: inherit;\n  text-align: left;\n  font: Regular 20px/26px Source Sans Pro;\n  letter-spacing: 0.4px;\n  opacity: 1;\n  height: 10em;\n`;\n\nconst Label = styled.label`\n  padding-top: 20px;\n  padding-bottom: 5px;\n`;\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  width: 30em;\n`;\n\nconst SubmitButton = styled.button`\n  background: #365df0 0% 0% no-repeat padding-box;\n  text-align: center;\n  font: Semibold 30px/40px Source Sans Pro;\n  letter-spacing: 0.36px;\n  color: #ffffff;\n  border-radius: 5px;\n  width: 122px;\n  height: 4em;\n  opacity: 1;\n  outline: none;\n  margin-top: 1.5em;\n  margin-bottom: 1.5em;\n`;\n\nconst Error = styled.span`\n  padding-top: 3px;\n  color: red;\n  text-align: left;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n`;\n\nconst AddToolForm = ({ setToolData, toolData, setIsOpen }) => {\n  const [targetValue, setTargetValue] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      link: \"\",\n      description: \"\",\n      tags: \"\"\n    },\n\n    validationSchema: Yup.object({\n      title: Yup.string().required(\"Required\"),\n      link: Yup.string().required(\"Required\"),\n      description: Yup.string().required(\"Required\"),\n      tags: Yup.string().required(\"Required\")\n    }),\n    onSubmit: values => {\n      if (formik.isValid) {\n        const request = Tools.registerTool(values);\n        request.then(response => {\n          if (response.status === 201) {\n            setToolData(toolData && toolData.concat([response.data]));\n            setIsOpen(false);\n          }\n        });\n      }\n    }\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Wrapper>\n        <h3>Add new Tool</h3>\n        <Label htmlFor=\"title\">Tool Name</Label>\n        <InputModal\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.title}\n          placeholder=\"Type the tool title\"\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <Error>{formik.errors.title}</Error>\n        ) : null}\n\n        <Label htmlFor=\"link\">ToolLink</Label>\n        <InputModal\n          id=\"link\"\n          name=\"link\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.link}\n          placeholder=\"Type the link for tool\"\n        />\n        {formik.touched.link && formik.errors.link ? (\n          <Error>{formik.errors.link}</Error>\n        ) : null}\n        <Label htmlFor=\"description\">Tool Description</Label>\n        <InputArea\n          id=\"description\"\n          name=\"description\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.description}\n          placeholder=\"Type a description for this tool\"\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <Error>{formik.errors.description}</Error>\n        ) : null}\n        <Label htmlFor=\"tags\">Tags</Label>\n        <InputModal\n          placeholder=\"Type with spaces between tags ...\"\n          id=\"tags\"\n          name=\"tags\"\n          type=\"text\"\n          onChange={({ target }) => {\n            setTargetValue(target.value);\n            const parsedValue = targetValue.split(\" \");\n            formik.setFieldValue(\"tags\", parsedValue);\n          }}\n          value={targetValue}\n        />\n        {formik.touched.tags && formik.errors.tags ? (\n          <Error>{formik.errors.tags}</Error>\n        ) : null}\n        <SubmitButton type=\"submit\" disabled={!formik.isValid}>\n          Submit\n        </SubmitButton>\n      </Wrapper>\n    </form>\n  );\n};\n\nexport default AddToolForm;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"styled-react-modal\";\nimport AddToolForm from \"./modal\";\n\nconst AddButton = styled.button.attrs(props => ({}))`\n  position: relative;\n  background: #0dcb7d 0% 0% no-repeat padding-box;\n  border-radius: 5px;\n  opacity: 1;\n  align-self: center;\n  height: 23px;\n  max-width: 40x;\n  outline: none;\n`;\n\nconst CloseButton = styled(AddButton)`\n  background: #f95e5a 0% 0% no-repeat padding-box;\n  position: absolute;\n  bottom: 1.8em;\n  right: 7em;\n  width: 10.5em;\n  height: 4em;\n  text-align: center;\n  font: Semibold 18px/24px Source Sans Pro;\n  letter-spacing: 0.36px;\n  color: #ffffff;\n`;\n\nconst Label = styled.span`\n  font: Semibold 18px/24px Source Sans Pro;\n  letter-spacing: 0.36px;\n  color: #ffffff;\n  opacity: 1;\n`;\n\nconst StyledModal = Modal.styled`\n  position:relative;\n  width: 40em;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  box-shadow: 0px 20px 25px #0000001A;\n  border: 1px solid #EBEAED;\n  border-radius: 5px;\n  opacity: 1;\n`;\n\nconst Add = ({ setToolData, toolData }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal(e) {\n    setIsOpen(!isOpen);\n  }\n  return (\n    <>\n      <AddButton onClick={toggleModal}>\n        <Label>Add</Label>\n      </AddButton>\n      <StyledModal\n        isOpen={isOpen}\n        onBackgroundClick={toggleModal}\n        onEscapeKeydown={toggleModal}\n      >\n        <AddToolForm\n          setToolData={setToolData}\n          toolData={toolData}\n          setIsOpen={setIsOpen}\n        />\n        <CloseButton onClick={toggleModal}>Close me</CloseButton>\n      </StyledModal>\n    </>\n  );\n};\n\nexport default Add;\n","import React, { useState } from \"react\";\nimport Search from \"./components/search_bar\";\nimport Check from \"./components/checkbox\";\nimport Add from \"./components/addbutton\";\nimport Loader from \"./components/loader\";\nimport styled from \"styled-components\";\nimport { ModalProvider } from \"styled-react-modal\";\n\nconst Card = React.lazy(() => import(\"./components/card\"));\n\nconst AppContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background-color: #e1e7fd;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: red;\n  position: inherit;\n  font: Semibold 42px/50px Source Sans Pro;\n  letter-spacing: 0.84px;\n  color: #170c3a;\n  opacity: 1;\n`;\nconst SubTitle = styled.h2`\n  font-size: 1.5em;\n  text-align: center;\n  color: #6554c0;\n  position: inherit;\n  font: Semibold 42px/50px Source Sans Pro;\n  letter-spacing: 0.84px;\n`;\n\nconst Container = styled.section`\n  background-color: #e1e7fd;\n`;\n\nconst TopWrapper = styled.section`\n  display: grid;\n  padding: 20px 50px 20px 50px;\n  grid-template-columns: 20% 3% 62% 15%;\n`;\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [checkValue, setCheckValue] = useState(false);\n  const [toolData, setToolData] = useState([]);\n\n  return (\n    <ModalProvider>\n      <AppContainer>\n        <Title>VUTTR</Title>\n        <SubTitle> Very Useful Tools to Remember</SubTitle>\n        <Container>\n          <TopWrapper>\n            <Search setInputValue={setInputValue} />\n            <Check setCheckValue={setCheckValue} />\n            <Add setToolData={setToolData} toolData={toolData} />\n          </TopWrapper>\n          <React.Suspense fallback={<Loader />}>\n            <Card\n              inputValue={inputValue}\n              checkValue={checkValue}\n              toolData={toolData}\n              setToolData={setToolData}\n            />\n          </React.Suspense>\n        </Container>\n      </AppContainer>\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Preloader = styled.span`\n  width: 100px;\n  height: 100px;\n  border: 5px solid #365df0;\n  border-color: #365df0 white white;\n  align-self: center;\n  border-radius: 50%;\n  animation: spin 2s linear infinite;\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Label = styled.h2`\n  font-size: 1.5em;\n  text-align: center;\n  color: #365df0;\n  font: Semibold 42px/50px Source Sans Pro;\n  letter-spacing: 0.84px;\n`;\n\nconst Wrapper = styled.section`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 35%;\n  left: 50%;\n`;\n\nconst Loader = () => {\n  return (\n    <Wrapper>\n      <Label> LOADING...</Label>\n      <Preloader />\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n","import axios from \"axios\";\n\nclass ConfigService {\n  static endPointBaseUrl = `https://my-db-challenge.herokuapp.com/`;\n\n  static publicHeaders = () => {\n    const params = {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    };\n    return params;\n  };\n\n  static publicApiEndpoint = () => {\n    const instance = axios.create({\n      baseURL: ConfigService.endPointBaseUrl,\n      headers: ConfigService.publicHeaders()\n    });\n\n    return instance;\n  };\n}\n\nexport default ConfigService;\n","import ConfigService from \"./config\";\n\nclass ToolsService {\n  static getTools = async () => {\n    const axiosInstance = ConfigService.publicApiEndpoint();\n\n    try {\n      const response = await axiosInstance.get(`/tools/`);\n      if (response) return response;\n    } catch (exception) {\n      throw `Failed to get tools. ${exception.toString()}`;\n    }\n  };\n\n  static filterToolByQuery = async queryParam => {\n    const axiosInstance = ConfigService.publicApiEndpoint();\n\n    try {\n      const response = await axiosInstance.get(`/tools/?q=${queryParam}`);\n      if (response) return response;\n    } catch (exception) {\n      throw `Failed to filter tools. ${exception.toString()}`;\n    }\n  };\n\n  static getToolsByTag = async tag => {\n    const axiosInstance = ConfigService.publicApiEndpoint();\n\n    try {\n      const response = await axiosInstance.get(`/tools/?tags_like=${tag}`);\n      if (response) return response;\n    } catch (exception) {\n      throw `Failed to get tools by tag. ${exception.toString()}`;\n    }\n  };\n\n  static registerTool = async params => {\n    const axiosInstance = ConfigService.publicApiEndpoint();\n\n    try {\n      const response = await axiosInstance.post(\"/tools/\", {\n        ...params\n      });\n      if (response) return response;\n    } catch (exception) {\n      throw `Failed to register tool. ${exception.toString()}`;\n    }\n  };\n\n  static deleteTool = async params => {\n    const axiosInstance = ConfigService.publicApiEndpoint();\n\n    try {\n      const response = await axiosInstance.delete(`/tools/${params}`);\n      if (response) return response;\n    } catch (exception) {\n      throw `Failed to delete tool. ${exception.toString()}`;\n    }\n  };\n}\n\nexport default ToolsService;\n"],"sourceRoot":""}