{"version":3,"sources":["components/remove_button.js","components/card.js"],"names":["RemoveButton","styled","button","Label","span","Warning","h3","ButtonContainer","section","ButtonCancel","ButtonAgree","StyledModal","Modal","Remove","itemTitle","toolId","handleDelete","isOpen","toggleModal","itemToRemove","onClick","onBackgroundClick","onEscapeKeydown","CardNote","Title","a","Description","h4","Tags","h5","TagsWrapper","Card","toolData","setToolData","inputValue","checkValue","useState","setIsOpen","setItemToRemove","ToolsService","deleteTool","then","response","status","filter","tool","id","useEffect","getTools","data","getToolsByTag","filterToolByQuery","length","map","item","idx","key","href","link","title","description","tags","tag"],"mappings":"2yDAIA,IAAMA,EAAeC,UAAOC,OAAV,KAWZC,EAAQF,UAAOG,KAAV,KAMLC,EAAUJ,UAAOK,GAAV,KAMPC,EAAkBN,UAAOO,QAAV,KAOfC,EAAeR,UAAOC,OAAV,KAeZQ,EAAcT,kBAAOQ,EAAPR,CAAH,KAGXU,EAAcC,IAAMX,OAAT,KA0CFY,EA3BA,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,OAASC,EAAiC,EAAjCA,YAAcC,EAAmB,EAAnBA,aAGxE,OACE,oCACE,kBAACnB,EAAD,CAAcoB,QAAS,kBAAKF,EAAYJ,KACtC,kBAACX,EAAD,gBAEF,kBAACQ,EAAD,CACEM,OAAQA,EACRI,kBAAmBH,EACnBI,gBAAiBJ,GAEjB,kBAACb,EAAD,+CACsCc,EADtC,MACwD,KAExD,kBAACZ,EAAD,KACE,kBAACE,EAAD,CAAcW,QAASF,GAAvB,UACA,kBAACR,EAAD,CAAaU,QAAS,kBAAMJ,EAAaD,KAAzC,sB,6mCC/EV,IAAMQ,EAAWtB,UAAOO,QAAV,KAURgB,EAAQvB,UAAOwB,EAAV,KAULC,EAAczB,UAAO0B,GAAV,KAWXC,EAAO3B,UAAO4B,GAAV,KASJC,EAAc7B,UAAOO,QAAV,KAmEFuB,UA7DF,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACtCC,oBAAS,GAD6B,mBAC3DnB,EAD2D,KACnDoB,EADmD,OAE3BD,mBAAS,IAFkB,mBAE3DjB,EAF2D,KAE7CmB,EAF6C,KAI5DpB,EAAa,SAACJ,GAClBuB,GAAWpB,GACXqB,EAAgBxB,IAGZE,EAAe,SAAAD,GACHwB,IAAaC,WAAWzB,GAChC0B,MAAK,SAAAC,GACa,MAApBA,EAASC,SACXV,EAAYD,EAASY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAO/B,MAChDsB,GAAU,QAoBhB,OAfAU,qBAAU,WACQR,IAAaS,WACrBP,MAAK,SAAAC,GAAQ,OAAIT,EAAYS,EAASO,WAC7C,IAEHF,qBAAU,WACJZ,EACcI,IAAaW,cAAchB,GACnCO,MAAK,SAAAC,GAAQ,OAAIT,EAAYS,EAASO,SAE9BV,IAAaY,kBAAkBjB,GACvCO,MAAK,SAAAC,GAAQ,OAAIT,EAAYS,EAASO,WAE/C,CAACf,IAEGF,GAAYA,EAASoB,OAAS,EACnCpB,GACEA,EAASqB,KAAI,SAACC,EAAMC,GAAP,OACX,kBAAChC,EAAD,CAAUiC,IAAKD,GACb,kBAAC/B,EAAD,CAAOiC,KAAMH,EAAKI,MAAOJ,EAAKK,OAC9B,kBAACjC,EAAD,KAAc4B,EAAKM,aACnB,kBAAC9B,EAAD,KACGwB,EAAKO,MACJP,EAAKO,KAAKR,KAAI,SAACS,EAAKP,GAAN,OAAc,kBAAC3B,EAAD,CAAM4B,IAAKD,GAAX,YAAsBO,QAEtD,kBAAC,EAAD,CACEhD,UAAWwC,EAAKK,MAChB5C,OAAQuC,EAAKR,GACb9B,aAAcA,EACdC,OAAQA,EACRC,YAAaA,EACbC,aAAcA,QAKtB,oCACE,kBAAC,IAAD","file":"static/js/3.65c5d312.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"styled-react-modal\";\n\nconst RemoveButton = styled.button`\n  background: #f95e5a 0% 0% no-repeat padding-box;\n  border-radius: 5px;\n  opacity: 1;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 122px;\n  height: 23px;\n  margin: 5px;\n`;\nconst Label = styled.span`\n  font: Semibold 18px/24px Source Sans Pro;\n  letter-spacing: 0.36px;\n  color: #ffffff;\n  opacity: 1;\n`;\nconst Warning = styled.h3`\n  padding: 6em 0em 4em 0em;\n  font: Semibold 18px/24px Source Sans Pro;\n  letter-spacing: 0.36px;\n`;\n\nconst ButtonContainer = styled.section`\n  display: flex;\n  padding: 2em 0em 2em 0em;\n  justify-content: space-around;\n  width: inherit;\n`;\n\nconst ButtonCancel = styled.button`\n  background: #365df0 0% 0% no-repeat padding-box;\n  text-align: center;\n  font: Semibold 30px/40px Source Sans Pro;\n  letter-spacing: 0.36px;\n  color: #ffffff;\n  border-radius: 5px;\n  width: 122px;\n  height: 4em;\n  opacity: 1;\n  outline: none;\n  margin-top: 1.5em;\n  margin-bottom: 1.5em;\n`;\n\nconst ButtonAgree = styled(ButtonCancel)`\n  background: #f95e5a 0% 0% no-repeat padding-box;\n`;\nconst StyledModal = Modal.styled`\n  position:relative;\n  width: 40em;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  box-shadow: 0px 20px 25px #0000001A;\n  border: 1px solid #EBEAED;\n  border-radius: 5px;\n  opacity: 1;\n`;\n\nconst Remove = ({ itemTitle, toolId, handleDelete, isOpen , toggleModal , itemToRemove }) => {\n    \n \n  return (\n    <>\n      <RemoveButton onClick={()=> toggleModal(itemTitle)}>\n        <Label>Remove</Label>\n      </RemoveButton>\n      <StyledModal\n        isOpen={isOpen}\n        onBackgroundClick={toggleModal}\n        onEscapeKeydown={toggleModal}\n      >\n        <Warning>\n          {`Are you sure you want to remove ${itemToRemove} ?`}{\" \"}\n        </Warning>\n        <ButtonContainer>\n          <ButtonCancel onClick={toggleModal}>Cancel</ButtonCancel>\n          <ButtonAgree onClick={() => handleDelete(toolId)}>\n            Yes , remove !\n          </ButtonAgree>\n        </ButtonContainer>\n      </StyledModal>\n    </>\n  );\n};\n\nexport default Remove;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ToolsService from \"../services/tools\";\nimport Loader from \"./loader\";\nimport RemoveButton from \"./remove_button\";\n\nconst CardNote = styled.section`\n  background: #ffffff 0% 0% no-repeat padding-box;\n  box-shadow: 0px 20px 25px #0000001a;\n  border: 1px solid #ebeaed;\n  border-radius: 5px;\n  opacity: 1;\n  margin: 50px;\n  position: relative;\n`;\n\nconst Title = styled.a`\n  position: absolute;\n  color: blue;\n  padding: 10px;\n  text-align: left;\n  font: Semibold 30px/36px Source Sans Pro;\n  letter-spacing: 0.6px;\n  opacity: 1;\n`;\n\nconst Description = styled.h4`\n  top: 30px;\n  position: relative;\n  padding: 0px 20px 0px 20px;\n  text-align: left;\n  font: Semibold 26px/32px Source Sans Pro;\n  letter-spacing: 0.52px;\n  color: #170c3a;\n  opacity: 1;\n`;\n\nconst Tags = styled.h5`\n  padding: 20px 20px 0px 20px;\n  text-align: left;\n  font: Semibold 24px/30px Source Sans Pro;\n  letter-spacing: 0.48px;\n  color: #170c3a;\n  opacity: 1;\n`;\n\nconst TagsWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  overflow:auto;\n`;\n\nconst Card = ({ toolData, setToolData, inputValue, checkValue }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [itemToRemove, setItemToRemove] =useState(\"\")\n\n  const toggleModal= (itemTitle)=> {\n    setIsOpen(!isOpen);\n    setItemToRemove(itemTitle)\n  }\n\n  const handleDelete = toolId => {\n    const request = ToolsService.deleteTool(toolId);\n    request.then(response => {\n      if (response.status === 200) {\n        setToolData(toolData.filter(tool => tool.id !== toolId));\n        setIsOpen(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const request = ToolsService.getTools();\n    request.then(response => setToolData(response.data));\n  }, []);\n\n  useEffect(() => {\n    if (checkValue) {\n      const request = ToolsService.getToolsByTag(inputValue);\n      request.then(response => setToolData(response.data));\n    } else {\n      const request = ToolsService.filterToolByQuery(inputValue);\n      request.then(response => setToolData(response.data));\n    }\n  }, [inputValue]);\n\n  return toolData && toolData.length > 0 ? (\n    toolData &&\n      toolData.map((item, idx) => (\n        <CardNote key={idx}>\n          <Title href={item.link}>{item.title}</Title>\n          <Description>{item.description}</Description>\n          <TagsWrapper>\n            {item.tags &&\n              item.tags.map((tag, idx) => <Tags key={idx}>{`# ${tag}`}</Tags>)}\n          </TagsWrapper>\n          <RemoveButton\n            itemTitle={item.title}\n            toolId={item.id}\n            handleDelete={handleDelete}\n            isOpen={isOpen}\n            toggleModal={toggleModal}\n            itemToRemove={itemToRemove}\n          />\n        </CardNote>\n      ))\n  ) : (\n    <>\n      <Loader />\n    </>\n  );\n};\n\nexport default Card;\n"],"sourceRoot":""}